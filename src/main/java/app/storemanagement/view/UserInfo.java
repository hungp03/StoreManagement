package app.storemanagement.view;

import app.storemanagement.controller.UserCtrl;
import app.storemanagement.model.Connection.DBConnection;
import app.storemanagement.model.UserModel;
import app.storemanagement.utils.Util;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.Caret;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Hung Pham
 */
public class UserInfo extends javax.swing.JFrame {

    private int uid;
    private String userRole;
    private boolean InfoChanged = false;

    public boolean isInfoChanged() {
        return InfoChanged;
    }

    /**
     * Creates new form UserInfo
     *
     * @param id
     * @param role
     */
    public UserInfo(int id, String role) {
        this.uid = id;
        this.userRole = role;
        initComponents();
        userID.setText(String.valueOf(uid));
        setUpPanels();
        getUserInfo();
    }
    CardLayout cardLayout = new CardLayout();
    Container container = this.getContentPane();

    private void setUpPanels() {

        if (container.getLayout() instanceof CardLayout cardLayout1) {
            cardLayout = cardLayout1;
        }
        this.add("userinfo", jPanel1);
        this.add("changepassword", jPanel2);

        cardLayout.show(container, "userinfo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        topLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        userID = new javax.swing.JTextField();
        userName = new javax.swing.JTextField();
        fullName = new javax.swing.JTextField();
        changePwLabel = new javax.swing.JLabel();
        updateInfoLabel = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        birthday = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updatePW = new javax.swing.JButton();
        cancelPw = new javax.swing.JButton();
        showPw = new javax.swing.JCheckBox();
        oldPw = new javax.swing.JPasswordField();
        newPw = new javax.swing.JPasswordField();
        retypePw = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thông tin tài khoản");
        setFocusTraversalPolicyProvider(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setPreferredSize(new java.awt.Dimension(360, 300));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        topLabel.setForeground(new java.awt.Color(76, 149, 108));
        topLabel.setText("Thông tin tài khoản");
        jPanel1.add(topLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 14, -1, -1));

        jLabel2.setText("ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 63, -1, -1));

        jLabel3.setText("Username");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 97, -1, -1));

        jLabel4.setText("Họ tên");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 131, -1, -1));

        jLabel5.setText("Ngày sinh");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 162, -1, -1));

        userID.setEditable(false);
        userID.setBackground(new java.awt.Color(255, 255, 255));
        userID.setFocusable(false);
        jPanel1.add(userID, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 60, 230, -1));

        userName.setEditable(false);
        userName.setBackground(new java.awt.Color(255, 255, 255));
        userName.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 94, 230, -1));
        ((AbstractDocument) userName.getDocument()).setDocumentFilter(new LimitDocumentFilter(20));

        fullName.setEditable(false);
        fullName.setBackground(new java.awt.Color(255, 255, 255));
        fullName.setCaretColor(new java.awt.Color(255, 255, 255));
        fullName.setMaximumSize(new java.awt.Dimension(230, 22));
        jPanel1.add(fullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 128, 230, -1));
        ((AbstractDocument) fullName.getDocument()).setDocumentFilter(new LimitDocumentFilter(50));

        changePwLabel.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        changePwLabel.setForeground(new java.awt.Color(76, 149, 108));
        changePwLabel.setText("Đổi mật khẩu");
        changePwLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changePwLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePwLabelMouseClicked(evt);
            }
        });
        jPanel1.add(changePwLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, -1, -1));

        updateInfoLabel.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        updateInfoLabel.setForeground(new java.awt.Color(76, 149, 108));
        updateInfoLabel.setText("Cập nhật thông tin");
        updateInfoLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateInfoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateInfoLabelMouseClicked(evt);
            }
        });
        jPanel1.add(updateInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 190, -1, -1));

        updateBtn.setText("Cập nhật");
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.setEnabled(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 246, -1, -1));

        cancelBtn.setText("Hủy");
        cancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelBtn.setEnabled(false);
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        jPanel1.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 246, -1, -1));

        birthday.setBackground(new java.awt.Color(255, 255, 255));
        birthday.setEnabled(false);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        birthday.setDateFormatString(sdf.toPattern());
        jPanel1.add(birthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 162, 230, -1));
        JTextFieldDateEditor _birthday = ((JTextFieldDateEditor) birthday.getDateEditor());
        _birthday.setEnabled(true);
        _birthday.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                e.consume(); // Chặn sự kiện phím
            }

            @Override
            public void keyPressed(KeyEvent e) {
                int keyCode = e.getKeyCode();
                if (keyCode == KeyEvent.VK_BACK_SPACE || keyCode == KeyEvent.VK_DELETE) {
                    e.consume(); // Chặn sự kiện phím
                }
            }
        });

        getContentPane().add(jPanel1, "card2");

        jPanel2.setPreferredSize(new java.awt.Dimension(360, 300));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(76, 149, 108));
        jLabel8.setText("Đổi mật khẩu");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 22, -1, -1));

        jLabel9.setText("Mật khẩu cũ");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 63, -1, -1));

        jLabel10.setText("Mật khẩu mới");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 115, -1, -1));

        jLabel11.setText("Xác nhận");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 164, -1, -1));

        updatePW.setText("Cập nhật");
        updatePW.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatePW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePWActionPerformed(evt);
            }
        });
        jPanel2.add(updatePW, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 250, -1, -1));

        cancelPw.setText("Hủy");
        cancelPw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelPw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPwActionPerformed(evt);
            }
        });
        jPanel2.add(cancelPw, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 250, -1, -1));

        showPw.setText("Hiện mật khẩu");
        showPw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPw.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showPwItemStateChanged(evt);
            }
        });
        jPanel2.add(showPw, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, -1, -1));
        jPanel2.add(oldPw, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 60, 230, -1));
        jPanel2.add(newPw, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 112, 230, -1));
        jPanel2.add(retypePw, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 161, 230, -1));

        getContentPane().add(jPanel2, "card3");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void getUserInfo() {
        String query = "";
        if (userRole.equals("admin")) {
            query = "select Username, Full_Name, Date_of_Birth from Admin where Admin_ID = " + uid;
        } else if (userRole.equals("kho") || userRole.equals("banhang")) {
            query = "select Username, Full_Name, Date_of_Birth from Employee where Employee_ID = " + uid;
        }
        try (Connection conn = DBConnection.getConnection(); Statement St = conn.createStatement(); ResultSet Rs = St.executeQuery(query)) {
            if (Rs.next()) {
                userName.setText(Rs.getString(1));
                fullName.setText(Rs.getString(2));
                birthday.setDate(Rs.getDate(3));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Có lỗi khi truy xuất thông tin", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(UserInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearPWField() {
        oldPw.setText("");
        newPw.setText("");
        retypePw.setText("");
        showPw.setSelected(false);
    }
    private void updatePWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePWActionPerformed
        String oldPassword = String.valueOf(oldPw.getPassword());
        UserCtrl tmp = new UserCtrl(DBConnection.getConnection());
        if (!tmp.checkOldPassword(uid, oldPassword, userRole)) {
            JOptionPane.showMessageDialog(null, "Mật khẩu cũ không chính xác", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String newPassword = String.valueOf(newPw.getPassword());
        String retypePassword = String.valueOf(retypePw.getPassword());
        if (!newPassword.equals(retypePassword)) {
            JOptionPane.showMessageDialog(null, "Mật khẩu mới không trùng nhau", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int response = JOptionPane.showConfirmDialog(null, "Bạn có muốn cập nhật mật khẩu?", "Alert",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            boolean success = tmp.updatePassword(uid, newPassword, userRole);
            if (success) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công!");
                getUserInfo();
                clearPWField();
                cardLayout.show(container, "userinfo");
            }
        }
    }//GEN-LAST:event_updatePWActionPerformed

    private void changePwLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePwLabelMouseClicked
        if (updateBtn.isEnabled() || cancelBtn.isEnabled()) {
            JOptionPane.showMessageDialog(null, "Vui lòng hoàn thành việc cập nhật thông tin", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        cardLayout.show(container, "changepassword");
    }//GEN-LAST:event_changePwLabelMouseClicked

    private void cancelPwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPwActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Bạn có muốn hủy thao tác?", "Alert",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            clearPWField();
            cardLayout.show(container, "userinfo");
        }

    }//GEN-LAST:event_cancelPwActionPerformed

    private void handleInput(boolean b) {
        if (b){
            userName.setCaretColor(Color.BLACK);
            fullName.setCaretColor(Color.BLACK);
        }
        else{
            userName.setCaretColor(Color.WHITE);
            fullName.setCaretColor(Color.WHITE);
        }
        // Thiết lập trạng thái editable và enable/disable buttons dựa trên giá trị boolean b
        userName.setEditable(b);
        fullName.setEditable(b);
        updateBtn.setEnabled(b);
        cancelBtn.setEnabled(b);
        birthday.getCalendarButton().setEnabled(b);
    }

    private void updateInfoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateInfoLabelMouseClicked
        handleInput(true);
    }//GEN-LAST:event_updateInfoLabelMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String uname = userName.getText();
        String fname = fullName.getText();
        Date dob = birthday.getDate();
        if (Util.validateUserInfo(uname, fname, dob)) {
            UserModel user = new UserModel(uid, uname, fname, dob);
            UserCtrl tmp = new UserCtrl(DBConnection.getConnection());
            int response = JOptionPane.showConfirmDialog(null, "Bạn có muốn cập nhật thông tin?", "Alert",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                boolean success = tmp.updateInfo(user, userRole);
                if (success) {
                    JOptionPane.showMessageDialog(null, "Cập nhật thành công!");
                    getUserInfo();
                    InfoChanged = true;
                    handleInput(false);
                }
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Bạn có muốn hủy thao tác?", "Alert",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            getUserInfo();
            handleInput(false);
        }
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void showPwItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showPwItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            // Hiển thị mật khẩu
            oldPw.setEchoChar((char) 0);
            newPw.setEchoChar((char) 0);
            retypePw.setEchoChar((char) 0);
        } else {
            // Che mật khẩu
            oldPw.setEchoChar('\u2022'); // Ký tự Unicode '•'
            newPw.setEchoChar('\u2022');
            retypePw.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_showPwItemStateChanged

    public String getNewUserName() {
        return fullName.getText();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser birthday;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton cancelPw;
    private javax.swing.JLabel changePwLabel;
    private javax.swing.JTextField fullName;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField newPw;
    private javax.swing.JPasswordField oldPw;
    private javax.swing.JPasswordField retypePw;
    private javax.swing.JCheckBox showPw;
    private javax.swing.JLabel topLabel;
    private javax.swing.JButton updateBtn;
    private javax.swing.JLabel updateInfoLabel;
    private javax.swing.JButton updatePW;
    private javax.swing.JTextField userID;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
